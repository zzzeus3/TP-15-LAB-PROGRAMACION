#include <iostream>
using namespace std;

class Empleado {
public:
    virtual double calcularSalario() const = 0; // Funci√≥n virtual pura
    virtual ~Empleado() {}
};

class Gerente : public Empleado {
private:
    double salarioBase, bono;
public:
    Gerente(double base, double b) : salarioBase(base), bono(b) {}
    double calcularSalario() const override {
        return salarioBase + bono;
    }
};

class Vendedor : public Empleado {
private:
    double salarioBase, comision, ventas;
public:
    Vendedor(double base, double com, double v) : salarioBase(base), comision(com), ventas(v) {}
    double calcularSalario() const override {
        return salarioBase + (ventas * comision);
    }
};

int main() {
    Empleado* gerente = new Gerente(5000, 2000);
    Empleado* vendedor = new Vendedor(3000, 0.1, 15000);

    cout << "Salario del gerente: " << gerente->calcularSalario() << endl;
    cout << "Salario del vendedor: " << vendedor->calcularSalario() << endl;

    delete gerente;
    delete vendedor;

    return 0;
}
